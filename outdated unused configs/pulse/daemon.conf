### Improving Linux Audio

# References:
# https://linuxreviews.org/PulseAudio
# https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/PerfectSetup/
# https://forum.level1techs.com/t/improving-linux-audio-updated/134511
# https://medium.com/@gamunu/enable-high-quality-audio-on-linux-6f16f3fe7e1f
# https://forums.linuxmint.com/viewtopic.php?t=44862

### PRIORITY
high-priority = yes
nice-level = -11
realtime-scheduling = yes
realtime-priority = 9
rlimit-rtprio = 9

### AUDIO QUALITY

# default-sample-format = float32le sends higher quality samples to ALSA which in turn sends it to the actual audio card.
# You may not be able to use the better float32le option.
# Run the command pacmd list-sinks | grep sample to see what your card(s) actually support.
# pacmd list-sinks | grep sample   will show what you can/should (ab)use
# lscpu | grep "Byte Order"        will tell if your CPU likes le or be
# default-sample-format = float32le
default-sample-format = s32le

# default-sample-rate sets the default sample-rate used by PulseAudio. 
# Modern digital audio equipment can usually handle 48000 just fine. 
# Using 96000 would also be fine if you only use a external DAC/AMP connected by USB or motherboard audio. 
# HDMI outputs on modern GPUs do not support anything higher than 48000. 
# You can look at less /proc/asound/card?/codec#0 to see what your audio outputs support.
default-sample-rate = 48000
alternate-sample-rate = 44100

# avoid-resampling will, if true, make PulseAudio switch between 48000 and 44100 audio output to the sound device
# depending on what is being played. This has historically been buggy and problematic when
# playing say 44100 music in the background and opening a video file that's 48000.
# Setting this to false makes PulseAudio use the default-sample-rate even if it means re-sampling 441000 audio.
# This is the better choice you will be playing audio from different sources - and you will end up doing that from time to time.
avoid-resampling = false

# enable-remixing refers to re-mixing audio channels. It is useful for remixing mono to stereo.
# It should be combined with remixing-use-all-sink-channels
# remixing-use-all-sink-channels set to true or false decides if stereo should be up-mixed to all channels on a surround system.
# Setting this to no makes it possible to have enable-remixing set to yes and still have mono up-mixed to stereo.
# enable-lfe-remixing refers to remixing of the sub-woofer channel.
# Modern surround receivers will typically have a built-in speaker setup where you can configure how many speakers you have.
# A surround receiver which knows there's 5 speakers and no subwoofer in a 5.1 setup (actually 5.0)
# will send the LFE sub-woofer channel to the front-speakers.
# enable-lfe-remixing=no may be the better option even if you have no sub-woofer.
# However, if you are connecting two stereo speakers by RCA then you may want to have pulseaudio convert LFE channel into a part of the stereo signal. 
# PulseAudio 13.99 replaces enable-lfe-remixing with remixing-produce-lfe,
# which ensures that a LFE channel is enabled if the output has one but the input doesn't, and remixing-consume-lfe
# which will remix the LFE signal into other channels if the source audio has a LFE channel and the output does not. Both default to no
enable-remixing = yes
remixing-use-all-sink-channels = no
# If you never use more than stereo
default-sample-channels = 2
# use enable-lfe-remixing if you have old PulseAudio version (not 14+)
# enable-lfe-remixing = no
# does the same as enable-lfe-remixing = no in latest PA versions
# for PulseAudio 14+
remixing-produce-lfe = no
remixing-consume-lfe = yes

# By default, PulseAudio uses timer-based scheduling. 
# In this mode, fixed-size fragments are not used at all, 
# and so the default-fragments and default-fragment-size-msec parameters are ignored.
# https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Setting_the_default_fragment_number_and_buffer_size_in_PulseAudio
# default-fragments = 3
# default-fragment-size-msec = 5

# resample-method sets the type of technology used for resampling.
# speex-float is a good option for weaker processors. It has many quality/speed options you can use by adding a -number to it.
# speex-float-10 provides better quality than say speex-float-2 - higher values produce better quality and consume more CPU,
# lower values have lower quality and consume less CPU.
# soxr-vhq produces better audio quality than speex-float-10 but it is also more CPU-intensive.
# The difference in CPU power required to re-sample audio mattered in 2005. Perhaps it meant something in 2010.
# It's mostly irrelevant on modern desktop machines.
# Use soxr-vhq if you have something like a Ryzen; use speex-float-10 or speex-float-6 if your machine is a very old trainwreck.
# pulseaudio --dump-resample-methods for all options
# speex-float-10 is best fast method, soxr-vhq is better but slower
# avoid soxr-vhq if you have an old slow CPU
resample-method = soxr-vhq
# resample-method = copy

# Per-application volumes change when the Master volume is adjusted
# This is because PulseAudio uses flat volumes by default, instead of relative volumes, relative to an absolute master volume.
# If this is found to be inconvenient, asinine, or otherwise undesireable, relative volumes can be enabled by disabling flat volumes
# https://wiki.archlinux.org/index.php/PulseAudio/Troubleshooting#Per-application_volumes_change_when_the_Master_volume_is_adjusted
flat-volumes = no
