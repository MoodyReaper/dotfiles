# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

font pango:Noto Sans Regular 11

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec --no-startup-id alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
# A more modern dmenu replacement is rofi:
# bindsym $mod+d exec "rofi -modi drun,run -show drun"
bindsym $mod+d exec rofi -show drun

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $workspace1 "1: Web "
set $workspace2 "2: Console "
set $workspace3 "3: Dev "
set $workspace4 "4: Files "
set $workspace5 "5: Different "
set $workspace6 "6: Games "
set $workspace7 "7: Media "
set $workspace8 "8: Messengers "
set $workspace9 "9: Additional "
set $workspace10 "10: Additional "

# switch to workspace
bindsym $mod+1 workspace number $workspace1
bindsym $mod+2 workspace number $workspace2
bindsym $mod+3 workspace number $workspace3
bindsym $mod+4 workspace number $workspace4
bindsym $mod+5 workspace number $workspace5
bindsym $mod+6 workspace number $workspace6
bindsym $mod+7 workspace number $workspace7
bindsym $mod+8 workspace number $workspace8
bindsym $mod+9 workspace number $workspace9
bindsym $mod+0 workspace number $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $workspace1
bindsym $mod+Shift+2 move container to workspace number $workspace2
bindsym $mod+Shift+3 move container to workspace number $workspace3
bindsym $mod+Shift+4 move container to workspace number $workspace4
bindsym $mod+Shift+5 move container to workspace number $workspace5
bindsym $mod+Shift+6 move container to workspace number $workspace6
bindsym $mod+Shift+7 move container to workspace number $workspace7
bindsym $mod+Shift+8 move container to workspace number $workspace8
bindsym $mod+Shift+9 move container to workspace number $workspace9
bindsym $mod+Shift+0 move container to workspace number $workspace10

# assigning apps with workspaces
# (use xprop command)
assign [class="Google-chrome"] 			$workspace1
assign [class="firefox"] 			$workspace1
assign [class="Tor Browser"]			$workspace1
assign [class="URxvt"] 				$workspace2
assign [class="Alacritty"]			$workspace2
assign [class="jetbrains-pycharm"] 		$workspace3
assign [class="jetbrains-studio"] 		$workspace3
assign [class="MATLAB R2018b"]			$workspace3
assign [class="GitHub Desktop"] 		$workspace3
assign [class="Thunar"] 			$workspace4
assign [class="Filezilla"] 			$workspace4
assign [class="Deluge"] 			$workspace5
assign [class="libreoffice-startcenter"] 	$workspace5
assign [class="libreoffice"] 			$workspace5
assign [class="libreoffice-writer"]		$workspace5
assign [class="Steam"]                          $workspace6
assign [class="Blueman-manager"] 		$workspace7
assign [class="TelegramDesktop"]                $workspace8
assign [class="Slack"] 				$workspace8
assign [class="Skype"] 				$workspace8

# custom keybinds
bindsym $mod+t exec thunar
bindsym $mod+g exec TZ=UTC firefox
bindsym $mod+Shift+g exec google-chrome-stable
bindsym $mod+Shift+m exec gnome-system-monitor
# bindsym $mod+m exec alacritty -e alsamixer
bindsym $mod+m exec pavucontrol
bindsym $mod+c exec teiler
bindsym $mod+Shift+s exec flameshot gui
bindsym $mod+p exec tor-browser-en
# bindsym $mod+Shift+s exec slack
# bindsym $mod+Shift+s exec spotify
bindsym $mod+Shift+t exec telegram-desktop
# bindsym $mod+Shift+d exec discrord
bindsym $mod+b exec blueman-manager
bindsym $mod+Shift+v exec simplescreenrecorder

# rules for executing apps
# (use xprop command)
for_window [class="Lxappearance"] floating enable border normal
for_window [class="Gnome-system-monitor"] floating enable border normal
for_window [class="File-roller"] floating enable border normal
for_window [class="TelegramDesktop"] floating enable border normal
for_window [class="Catfish"] floating enable border normal
for_window [class="discord"] floating enable border normal
for_window [class="Grsync"] floating enable border normal
for_window [class="mpv"] floating enable border normal
for_window [class="Gnome-mplayer"] floating enable border normal
for_window [class="Gnome-mpv"] floating enable border normal
for_window [class="Gnome-screenshot"] floating enable border normal
for_window [class="Pavucontrol"] floating enable border normal
for_window [class="Keybase"] floating enable border normal
for_window [class="SpeedCrunch"] floating enable border normal
for_window [class="QjackCtl"] floating enable border normal
for_window [class="Blueman-manager"] floating enable border normal
for_window [class="SimpleScreenRecorder"] floating enable border normal
for_window [class="zoom"] floating enable border normal
for_window [class="Eog"] floating enable border normal
for_window [class="com-xk72-charles-gui-MainWithClassLoad"] floating enable border normal
for_window [class="VirtualBox Manager"] floating enable border normal
for_window [class="Joplin"] floating enable border normal
for_window [class="Lazarus"] floating enable border normal
for_window [class="ToneLib GFX"] floating enable border normal
for_window [class="Cadence"] floating enable border normal
for_window [class="Cypress"] floating enable border normal
# https://wiki.archlinux.org/title/I3#Correct_handling_of_floating_dialogs
for_window [window_role="pop-up"] floating enable border normal
for_window [window_role="task_dialog"] floating enable border normal

# PlayOnLinux
for_window [class="Mainwindow.py"] floating enable border normal
# assigning Spotify with workspace doesn't work, so "move" method is used instead
for_window [class="Spotify"] move to workspace $workspace7
for_window [class="discord"] move to workspace $workspace8		

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# locking session
#bindsym $mod+shift+x exec i3lock
bindsym $mod+shift+x exec --no-startup-id loginctl lock-session

# sreen brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 5		# increase screen brightness
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 5		# decrease screen brightness

# ALSA audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -q set Master 1%+	#increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id amixer -q set Master 1%-	#decrease sound volume
bindsym XF86AudioMute exec --no-startup-id amixer -q set Master toggle		# mute sound

# Pulse Audio controls
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Taken from new sample config:
# Use pactl to adjust volume in PulseAudio.
#set $refresh_i3status killall -SIGUSR1 i3status
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
#bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# setting a wallpaper path
set $wallpaper-laptop-path ~/Pictures/Wallpapers/ArchLinux.png
set $wallpaper-monitor-path ~/Pictures/Wallpapers/WideResolution/FateRuptured.png

# Autostart
# setiing a wallpaper
# exec --no-startup-id feh --bg-scale $wallpaper-laptop-path $wallpaper-monitor-path
exec --no-startup-id feh --bg-scale $wallpaper-monitor-path
# composite manager
# exec --no-startup-id compton -b -c --backend glx --vsync opengl-swc --unredir-if-possible 
#exec --no-startup-id picom -b -c --unredir-if-possible --config ~/.config/picom/picom.conf
# -c enables client-side shadows on windows
# -b daemonizes process
# --unredir-if-possible disables the compositor when you're focused on a fullscreen window

# Lockscreen
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork
exec --no-startup-id xss-lock --transfer-sleep-lock -- ~/.config/i3/i3lock.sh
# Simple alternative with timeout lock:
#exec --no-startup-id xautolock -time 10 -locker i3lock
exec --no-startup-id xautolock -time 10 -locker "loginctl lock-session" -detectsleep

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet
# starting Discord
exec --no-startup-id discord
# starting Telegram
exec --no-startup-id telegram-desktop
# starting Gnome-Polkit
exec --no-startup-id /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1
# starting Keybase
#exec --no-startup-id keybase
# starting Slack
#exec --no-startup-id slack

# disabling edge borders
hide_edge_borders both

# colors definition
set $bg-color            #2F343F
set $inactive-bg-color   #2F343F
set $text-color          #F3F3F3
set $inactive-text-color #676E7D
set $urgent-bg-color     #E53935
set $indicator-color     #E53935
set $bar-separator       #757575

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          $indicator-color
client.unfocused        $inactive-bg-color  $inactive-bg-color $inactive-text-color $indicator-color
client.focused_inactive $inactive-bg-color  $inactive-bg-color $inactive-text-color $indicator-color
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          $indicator-color

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        # status_command i3status
        status_command i3blocks -c ~/.config/i3blocks/i3blocks.conf
        # debugging:
        # status_command 2>~/i3blocks.err i3blocks -vvv -c ~/.config/i3blocks/i3blocks.conf | tee ~/i3blocks.out
        colors {
                background      $bg-color
                separator       $bar-separator
                #                  border             background         text
                focused_workspace  $bg-color          $bg-color          $text-color
                inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
                urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
        }
}

## Manual management of external displays
# Set the shortcuts and what they do
set $mode_display Ext Screen (v) VGA ON, (h) HDMI ON, (e) eDP ON <> (mod+v) VGA OFF, (mod+h) HDMI OFF, (mod+e) eDP OFF
mode "$mode_display" {
    bindsym v exec --no-startup-id xrandr --output VGA1 --auto --right-of eDP1, mode "default"
    bindsym h exec --no-startup-id xrandr --output HDMI1 --auto --right-of eDP1, mode "default"
    bindsym e exec --no-startup-id xrandr --output eDP1 --auto

    bindsym $mod+v exec --no-startup-id xrandr --output VGA1 --auto --off, mode "default"
    bindsym $mod+h exec --no-startup-id xrandr --output HDMI1 --auto --off, mode "default"
    bindsym $mod+e exec --no-startup-id xrandr --output eDP1 --auto --off

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# Declare here the shortcut to bring the display selection menu
bindsym $mod+x mode "$mode_display"
