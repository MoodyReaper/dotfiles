#!/bin/bash

set -eo pipefail

# Credits:
# https://github.com/Misterio77/dotfiles/blob/sway/home/bin/darkmode

function try_scheme() {
  if [[ -z $1 ]] || [[ -z $2 ]]; then
    return 1
  fi
  new_scheme=$1
  current_scheme=$2

  # Try to find a scheme with that name, that both exists in flavours list and is different from the current_scheme
  # shellcheck disable=SC2312
  if (flavours list -l | grep -xq "$new_scheme") && [[ $new_scheme != "$current_scheme" ]]; then
    # If it exists, echo and return ok
    echo "$new_scheme"
    return 0
  else
    return 1
  fi
}

function which_scheme() {
  scheme=$1
  # If contains light in name
  if [[ $scheme =~ "light" ]]; then
    # Try to replace light with dark
    (try_scheme "${scheme/light/dark}" "$scheme" ||
      # Try to remove light from start and end
      try_scheme "${scheme#"light"}" "$scheme" ||
      try_scheme "${scheme#"light-"}" "$scheme" ||
      try_scheme "${scheme%"light"}" "$scheme" ||
      try_scheme "${scheme%"-light"}" "$scheme") && return 0
  # If contains dark in name
  elif [[ $scheme =~ "dark" ]]; then
    # Try to replace dark with light
    (try_scheme "${scheme/dark/light}" "$scheme" ||
      # Try to remove dark from start and end
      try_scheme "${scheme#"dark"}" "$scheme" ||
      try_scheme "${scheme#"dark-"}" "$scheme" ||
      try_scheme "${scheme%"dark"}" "$scheme" ||
      try_scheme "${scheme%"-dark"}" "$scheme") && return 0
  # If contains moon in name (rose-pine-moon)
  elif [[ $scheme =~ "moon" ]]; then
    # Replace with dawn
    try_scheme "${scheme/moon/dawn}" "$scheme" && return 0
  # If contains dawn in name (rose-pine-dawn)
  elif [[ $scheme =~ "dawn" ]]; then
    # Replace with moon
    try_scheme "${scheme/dawn/moon}" "$scheme" && return 0
  elif [[ $scheme == "lime" ]]; then
    try_scheme "${scheme/lime/emil}" "$scheme" && return 0
  elif [[ $scheme == "emil" ]]; then
    try_scheme "${scheme/emil/lime}" "$scheme" && return 0

  else
    # try adding dark to start and end
    (try_scheme "${scheme}-dark" "$scheme" || try_scheme "dark-${scheme}" "$scheme") && return 0
    # try adding light to start and end
    (try_scheme "${scheme}-light" "$scheme" || try_scheme "light-${scheme}" "$scheme") && return 0
    # try adding dawn to end (rose-pine)
    try_scheme "${scheme}-dawn" "$scheme" && return 0
  fi
  # If no change worked
  return 1
}

function current() {
  # Get current scheme background color
  # shellcheck disable=SC2312
  bg_color=$(flavours info -r "$(flavours current)" | sed -n '3 p')
  # Get first character
  character=${bg_color:1:1}
  # If its less than 5, normally is a dark scheme
  if [[ $character -lt 5 ]]; then
    echo "dark"
  else
    echo "light"
  fi
}

# Show current scheme type
if [[ $* =~ "q" ]]; then
  current
  exit 0
fi

# Switch scheme type
# shellcheck disable=SC2312
if [[ "$(current)" == "dark" ]]; then
  new_mode="light"
else
  new_mode="dark"
fi

# If the current scheme is a generated one
# shellcheck disable=SC2312
if [[ $(flavours current) =~ "generated" ]]; then
  # Generate in the opposite mode
  flavours generate "$new_mode" "$(cat ~/.bg)" && flavours apply generated
else
  # If not, search for a scheme with the opposite type
  # shellcheck disable=SC2015
  new_scheme=$(which_scheme "$(flavours current)") && flavours apply "$new_scheme" ||
    {
      echo >&2 "Your current scheme doesn't have a $new_mode variant"
      exit 1
    }
fi
